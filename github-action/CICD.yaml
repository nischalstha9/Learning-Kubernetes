name: Auto Issue Closer

on:
  push:
    branches:
      - nischal/kubernetes-setup
  # pull_request:
  #   branches:
  #     - "develop" # i want issues to be closed when pr are merged to these branches
  #     - "staging"

jobs:
  # echo:
  #   name: Echo Github Variables
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         echo ${{ github.head_ref }} ${{ github.sha }} ${{github.repository}}
  build:
    runs-on: ubuntu-latest
    
    name: Build and Push Docker image
    env:
      REPOSITORY_NAME: naxa-backend-boilerplate
      DOCKER_HUB_REPO_USER: nischalstha
      IMAGE_TAG: ${{github.sha}}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        run: | 
          IMAGE=${{ env.DOCKER_HUB_REPO_USER }}/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG }}
          echo $IMAGE
          docker build -t $IMAGE .
          docker push $IMAGE

      - 
        name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        id: install
      - 
        name: setup kubeconfig
        run: |
          echo '${{secrets.KUBECONFIG}}' >> kubeconfig.yml
      -
        name: test kubeconfig
        run: |
          export KUBECONFIG=`pwd`/kubeconfig.yml
          kubectl get nodes
      - 
        name: Replace variable in deployment
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: '["k8s/deployment.yaml"]'
        env:
          IMAGE: ${{ env.DOCKER_HUB_REPO_USER }}/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG }}
      -
        name: run deployment
        run: |
          export KUBECONFIG=`pwd`/kubeconfig.yml
          kubectl apply -f "k8s/deployment.yaml"
