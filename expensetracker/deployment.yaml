apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: expense-tracker
  name: expense-tracker-deployment
  labels:
    app: expense-tracker-deployment
  annotations:
    kubernetes.io/change-cause: Trying kubernetes deployment for web change cause 1
spec:
  replicas: 2
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: expense-tracker-deployment
  template:
    metadata:
      labels:
        app: expense-tracker-deployment
    spec:
      containers:
      - name: expense-tracker-deployment
        image: nischalstha/expense_tracker_web:good
        command: ["sh", "/code/docker-entrypoint.sh" ]
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: expense-tracker-secrets
        resources:
          requests:
            memory: "450Mi"
            cpu: "0.45"
          limits:
            memory: "500Mi"
            cpu: "0.5"
        readinessProbe:
          httpGet:
            path: /admin/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 20
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: 8000
        #   initialDelaySeconds: 15
        #   periodSeconds: 120

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: expense-tracker
  name: expense-tracker-celery-deployment
  labels:
    app: expense-tracker-celery-deployment
  annotations:
    kubernetes.io/change-cause: Trying kubernetes deployment for celery change cause 1
spec:
  replicas: 2
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: expense-tracker-celery-deployment
  template:
    metadata:
      labels:
        app: expense-tracker-celery-deployment
    spec:
      containers:
      - name: expense-tracker-celery-deployment
        image: nischalstha/expense_tracker_web:good
        command: ["sh", "/code/celery.sh" ]
        # ports:
        # - containerPort: 8000
        envFrom:
        - secretRef:
            name: expense-tracker-secrets
        resources:
          requests:
            memory: "450Mi"
            cpu: "0.45"
          limits:
            memory: "500Mi"
            cpu: "0.5"
        readinessProbe:
            exec:
              command:
                [
                  "python",
                  "-c",
                  '"import os;from celery.app.control import Inspect;from api import celery_app;exit(0 if os.environ[''HOSTNAME''] in '',''.join(Inspect(app=celery_app).stats().keys()) else 1)"',
                ]
            initialDelaySeconds: 120
            periodSeconds: 300
        # livenessProbe:
        #   exec:
        #     command:
        #       [
        #         "python",
        #         "-c",
        #         '"import os;from celery.app.control import Inspect;from api import celery_app;exit(0 if os.environ[''HOSTNAME''] in '',''.join(Inspect(app=celery_app).stats().keys()) else 1)"',
        #       ]
        #   initialDelaySeconds: 120
        #   periodSeconds: 300

# ---

# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: base-django-autoscaler
#   namespace: base-django
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: expense-tracker-deployment
#   minReplicas: 1
#   maxReplicas: 10
#   targetCPUUtilizationPercentage: 50